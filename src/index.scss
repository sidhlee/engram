$desktop: 1200px;
$mobile: 700px;

:root {
  // colors
  --cl-yellow: #eaae00;
  --cl-primary-light: #cfd8dc;
  --cl-accent: rgb(6, 199, 224);
  --cl-accent-dark: rgb(0, 171, 194);
  --cl-primary: #465ac9;
  --cl-primary-dark: #3b4cad;

  --cl-blue: var(--cl-primary);
  --cl-blue-dark: var(--cl-primary-dark);
  --cl-dark-grey: #202124;
  --cl-error: red;
  --cl-danger: red;
  --cl-white: white;
  --cl-off-white: #f8f8ff;
  --cl-link-hover: #1a8ee2;
  --cl-link-hover: var(--cl-accent-dark);

  --text-main: #333;
  --text-inverse: white;
  --text-muted: #646363;
  --text-muted-inverse: #8a8989;

  // spacing
  --px: Min(Max(0.25rem, 4vw), 4rem);
  --gutter: Min(Max(0.25rem, 2.5vw), 2rem);

  // dimensions
  --top-form-toggler-size: 4.5rem;

  // border
  --border-color: #878787;
  --border-radius: 7px;

  // z-index
  --z-bg-overlay: 500;
  --z-TopLevelArticleForm: 700;
  --z-form-toggle: 800;
  --z-modal: 1000;
  --z-menu-button: 900;
  --z-menu-modal: 850;

  --timing-spring: cubic-bezier(0.39, 0.64, 0.32, 1.1);
  @media (max-width: $mobile) {
    --top-form-toggler-size: 4rem;
  }
}

html {
  box-sizing: border-box;
  font-size: Min(Max(100%, calc(1vw + 3px)), 125%);
  // https://css-tricks.com/css-fix-for-100vh-in-mobile-webkit/
  height: -webkit-fill-available;
}
*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: var(--cl-dark-grey);
  color: var(--text-main);
  min-height: 100vh;
  min-height: -webkit-fill-available;
}

h2,
h3,
p {
  line-height: 1.6;
}

img {
  max-width: 100%;
  max-height: 100%;
}

ul {
  list-style: none;
  padding: 0;
}

a,
button {
  cursor: pointer;
  margin: 0;
  padding: 0;
}

button {
  background: transparent;
  border: 0;
  color: var(--text-muted);
  transition: all 200ms ease;
  &:hover {
    color: var(--text-main);
    border-color: var(--text-main);
  }
}

a {
  text-decoration: none;
  color: inherit;
  transition: all 200ms ease;
  &:hover,
  &:focus {
    color: var(--cl-link-hover);
  }
}

input,
textarea,
.button {
  font: inherit;
  padding: 0.75em;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
}

/* ========================= 
 *  VENDORS 
 * =========================== */

// React-Masonry-Css
.my-masonry-grid {
  display: -webkit-box; /* Not needed if autoprefixing */
  display: -ms-flexbox; /* Not needed if autoprefixing */
  display: flex;
  margin-left: -30px; /* gutter size offset */
  width: auto;
  @media (max-width: $mobile) {
    margin-left: 0;
  }
}
.my-masonry-grid_column {
  padding-left: var(--gutter); /* gutter size */
  background-clip: padding-box;
  @media (max-width: $mobile) {
    padding-left: 0;
  }
}

/* Style your items */
.my-masonry-grid_column > div {
  /* change div to reference your elements you put in <Masonry> */
  background: grey;
  margin-bottom: 30px;
}

/* ========================= 
 *  UTILITIES
 * =========================== */

.visually-hidden:not(:focus):not(:active) {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(00 0 0);
  overflow: hidden;
}

.shadow {
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
}

.nowrap {
  white-space: nowrap;
}

.accent {
  color: var(--cl-accent) !important;
}

/* ========================= 
 *  COMPONENT CLASSES
 * =========================== */

.form {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0;
  padding: 2em 1em 1em;
  border-radius: var(--border-radius);
  background: white;
  .form-buttons {
    text-align: left;
    button {
      font-size: 1rem;
    }
  }
}

.input-control {
  width: 100%;
  position: relative;
  &:not(:last-of-type) {
    margin-bottom: 1em;
  }
  input,
  textarea {
    width: 100%;
  }

  textarea {
    resize: none;
  }

  .error-message {
    position: absolute;
    font-size: 0.88em;
    bottom: -1.25em;
    left: 1em;
    color: var(--cl-error);
  }
}

.button {
  color: var(--text-muted);
  border: 0;
  text-transform: uppercase;
  font-size: 0.9rem;
  font-weight: bold;
  &:hover {
    color: var(--text-main);
  }
}

.button-sm {
  padding: 0.25em 0.5em;
  font-size: 0.9rem;
}

.button-md {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.25rem;
  padding: 0.25em 0.5em;
  color: var(--text-muted);
  span {
    display: block;
    line-height: 0; // remove empty space at the bottom
  }
  &.inverse {
    &:hover {
      color: var(--text-inverse);
    }
  }
}

.button-bg {
  width: 100%;
  background: var(--cl-blue);
  padding: 1em 2em;
  color: var(--text-inverse);
  font-size: 1.2rem;
  font-weight: bold;
  transition: all 200ms ease;
  &:hover,
  &:focus {
    background: var(--cl-blue-dark);
    color: var(--text-inverse);
  }
}

.button-danger {
  &:hover {
    color: var(--cl-danger);
    transform: scale(1.1);
  }
}

.bg-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: var(--z-bg-overlay);
  background-color: rgba(0, 0, 0, 0.6);
}

/* ========================= 
 *  KEYFRAMES
 * =========================== */

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fade-left {
  0% {
    opacity: 0;
    transform: translate3d(-35%, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0%, 0, 0);
  }
}

@keyframes unfold {
  0% {
    opacity: 0.5;
    transform: scaleY(0);
  }
  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}

@keyframes mid-air {
  0% {
    opacity: 1;
    transform: perspective(130px) translate3d(0, 0, 0) rotateY(0);
  }
  50% {
    opacity: 0.8;
    transform: perspective(130px) translate3d(3px, 1px, -2px) rotateY(2deg);
  }
  100% {
    opacity: 1;
    transform: perspective(130px) translate3d(0, 0, 0) rotateY(0);
  }
}
